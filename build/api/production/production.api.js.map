{"version":3,"sources":["../../../src/api/production/production.api.js"],"names":["getProductionList","req","res","limit","offset","status","name","query","fliterName","Op","like","conditions","rows","count","Production","findAndCountAll","where","success","error","fail","message","getAlbumFromProductionById","id","params","fliterProductionId","productionId","Album"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;AACA;;AAEO,MAAMA,gDAAoB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnD,MAAG;AACD,UAAM,EAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,IAAxB,KAAgCL,IAAIM,KAA1C;AACA,UAAMC,aAAaF,OAAO,EAACA,MAAM,EAAE,CAACG,wBAAGC,IAAJ,GAAY,IAAGJ,IAAK,GAAtB,EAAP,EAAP,GAA2C,EAA9D;AACA,UAAMK,0BAAiBH,UAAjB,IAA6BH,MAA7B,GAAN;AACA,UAAM,EAACO,IAAD,EAAOC,KAAP,KAAgB,MAAMC,qBAAWC,eAAX,CAA2B,EAACC,OAAOL,UAAR,EAAoBP,MAApB,EAA4BD,KAA5B,EAA3B,CAA5B;AACAD,QAAIe,OAAJ,CAAYL,IAAZ,EAAkB,EAACT,KAAD,EAAQC,MAAR,EAAgBS,KAAhB,EAAlB;AACD,GAND,CAME,OAAMK,KAAN,EAAY;AACZhB,QAAIiB,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CAVM;;AAYA,MAAMC,kEAA6B,OAAOpB,GAAP,EAAYC,GAAZ,KAAoB;AAC5D,MAAG;AACD,UAAM,EAACoB,EAAD,KAAOrB,IAAIsB,MAAjB;AACA,UAAM,EAACpB,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,IAAxB,KAAgCL,IAAIM,KAA1C;AACA,UAAMC,aAAaF,OAAO,EAACA,MAAM,EAAE,CAACG,wBAAGC,IAAJ,GAAY,IAAGJ,IAAK,GAAtB,EAAP,EAAP,GAA4C,EAA/D;AACA,UAAMkB,qBAAqB,EAACC,cAAcH,EAAf,EAA3B;AACA,UAAMX,0BAAiBa,kBAAjB,EAAwChB,UAAxC,IAAoDH,MAApD,GAAN;AACA,UAAM,EAACO,IAAD,EAAOC,KAAP,KAAgB,MAAMa,gBAAMX,eAAN,CAAsB,EAACC,OAAOL,UAAR,EAAoBP,MAApB,EAA4BD,KAA5B,EAAtB,CAA5B;AACAD,QAAIe,OAAJ,CAAYL,IAAZ,EAAkB,EAACT,KAAD,EAAQC,MAAR,EAAgBS,KAAhB,EAAlB;AACD,GARD,CAQE,OAAMK,KAAN,EAAY;AACZhB,QAAIiB,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CAZM","file":"production.api.js","sourcesContent":["import Album from '../../models/album';\nimport { Op } from '../../common/sequelize-connection';\nimport Production from '../../models/production';\n//from admin productions\n\nexport const getProductionList = async (req, res) => {\n  try{\n    const {limit, offset, status, name} = req.query;\n    const fliterName = name ? {name: { [Op.like]: `%${name}%`}} : {};\n    const conditions = {...fliterName, status};\n    const {rows, count} = await Production.findAndCountAll({where: conditions, offset, limit});\n    res.success(rows, {limit, offset, count});\n  } catch(error){\n    res.fail(error.message);\n  }\n};\n\nexport const getAlbumFromProductionById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const {limit, offset, status, name} = req.query;\n    const fliterName = name ? {name: { [Op.like]: `%${name}%` }} : {};\n    const fliterProductionId = {productionId: id};\n    const conditions = {...fliterProductionId, ...fliterName, status};\n    const {rows, count} = await Album.findAndCountAll({where: conditions, offset, limit});\n    res.success(rows, {limit, offset, count});\n  } catch(error){\n    res.fail(error.message);\n  }\n};\n"]}