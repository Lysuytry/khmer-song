{"version":3,"sources":["../../../../src/api/admin/production/production.api.js"],"names":["getProductionList","req","res","limit","offset","status","name","query","fliterName","Op","like","conditions","rows","count","Production","findAndCountAll","where","success","error","fail","message","createProduction","body","production","findOrCreate","defaults","updateProductionById","id","params","statusQuery","logo","createdBy","updatedBy","data","update","deleteProductionById","result","getProductionById","findOne"],"mappings":"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","file":"production.api.js","sourcesContent":["import Production from '../../../models/production';\nimport {Op} from '../../../common/sequelize-connection';\n\nexport const getProductionList = async (req, res) => {\n  try{\n    const {limit, offset, status, name} = req.query;\n    const fliterName = name ? {name: { [Op.like]: `%${name}%`}} : {};\n    const conditions = {...fliterName, status};\n    const {rows, count} = await Production.findAndCountAll({where: conditions, limit, offset});\n    res.success(rows, {limit, offset, count});\n  } catch(error){\n    res.fail(error.message);\n  }\n};\n\nexport const createProduction = async (req, res) => {\n  try{\n    const {name} = req.body;\n    const [production] = await Production.findOrCreate({where: {name}, defaults: req.body});\n    res.success(production);\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const updateProductionById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const statusQuery = req.query.status;\n    let {name, logo, status, createdBy, updatedBy} = req.body;\n    name = name ? {name} : {};\n    logo = logo ? {logo} : {};\n    createdBy = createdBy ? {createdBy} : {};\n    updatedBy = updatedBy ? {updatedBy} : {};\n    status = status ? {status} : {};\n    const data = {...name, ...logo, ...status, ...createdBy, ...updatedBy};\n    await Production.update(data, {where: {id, 'status': statusQuery}});\n    res.success('Successfully updated.');\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const deleteProductionById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const [result] = await Production.update({status: 'inactive'}, {where: {id, status: 'active'}});\n    result === 0 ? res.success('Id is not found.') : res.success('Successfully deleted.');\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const getProductionById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const {status} = req.query;\n    const production = await Production.findOne({where: {id, status}});\n    res.success(production);\n  } catch(error){\n    res.fail(error);\n  }\n};\n"]}