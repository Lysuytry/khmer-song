{"version":3,"sources":["../../../../src/api/admin/album/album.api.js"],"names":["getAlbumList","req","res","limit","offset","status","name","type","query","fliterName","Op","like","fliterType","conditions","rows","count","Album","findAndCountAll","where","success","error","fail","createAlbum","body","album","findOrCreate","defaults","getAlbumById","id","params","findOne","updateAlbumById","statusQuery","image","productionId","createdBy","updatedBy","data","update","deletedAlbumById","result"],"mappings":"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","file":"album.api.js","sourcesContent":["import Album from '../../../models/album';\nimport {Op} from '../../../common/sequelize-connection';\n\nexport const getAlbumList = async (req, res) => {\n  try{\n    const {limit, offset, status, name, type} = req.query;\n    const fliterName = name ? {name: { [Op.like]: `%${name}%` }} : {};\n    const fliterType = type ? {type} : {};\n    const conditions = {...fliterName, status, ...fliterType};\n    const {rows, count} = await Album.findAndCountAll({where: conditions, offset, limit});\n    res.success(rows, {limit, offset, count});\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const createAlbum = async (req, res) => {\n  try{\n    const {name} = req.body;\n    const [album] = await Album.findOrCreate({where: {name}, defaults: req.body});\n    res.success(album);\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const getAlbumById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const {status} = req.query;\n    const album = await Album.findOne({where: {id, status} });\n    res.success(album);\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const updateAlbumById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const statusQuery = req.query.status;\n    let {name, image, status, productionId, createdBy, updatedBy, type} = req.body;\n    name = name ? {name} : {};\n    image = image ? {image} : {};\n    status = status ? {status} : {};\n    productionId = productionId ? {productionId} : {};\n    createdBy = createdBy ? {createdBy} : {};\n    updatedBy = updatedBy ? {updatedBy} : {};\n    type = type ? {type} : {};\n    const data = {...name, ...image, ...status, ...productionId, ...createdBy, ...updatedBy, ...type};\n    await Album.update(data, {where: {id, 'status': statusQuery}});\n    res.success('Successfully updated.');\n  } catch(error){\n    res.fail(error);\n  }\n};\n\nexport const deletedAlbumById = async (req, res) => {\n  try{\n    const {id} = req.params;\n    const [result] =  await Album.update({status: 'inactive'}, {where: {id, status: 'active'}});\n    result === 0 ? res.fail('If is not found') : res.success('Successfully deleted.');\n  } catch(error){\n    res.fail(error);\n  }\n};\n"]}