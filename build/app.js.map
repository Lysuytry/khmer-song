{"version":3,"sources":["../src/app.js"],"names":["app","ENDPOINT","process","env","use","body","json","urlencoded","extended","req","res","next","success","data","options","code","status","fail","message","admin"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;AACA,MAAM,EAACC,QAAD,KAAaC,QAAQC,GAA3B;AACAH,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAJ,IAAII,GAAJ,CAAQC,qBAAKC,IAAL,EAAR;AACAN,IAAII,GAAJ,CAAQC,qBAAKE,UAAL,CAAgB,EAAEC,UAAU,KAAZ,EAAhB,CAAR;;AAEAR,IAAII,GAAJ,CAAQ,CAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxB;AACA,4BAAYF,GAAZ;AACA;AACAC,QAAIE,OAAJ,GAAc,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAO,GAAvB,KAA+B;AACzC,eAAO,OAAOF,IAAP,KAAgB,QAAhB,GAA2BH,IAAIM,MAAJ,CAAWD,IAAX,EAAiBT,IAAjB,CAAsB,EAACO,IAAD,EAAOC,OAAP,EAAtB,CAA3B,GAAoEJ,IAAIM,MAAJ,CAAWD,IAAX,EAAiBT,IAAjB,CAAsBO,IAAtB,CAA3E,CAAuG;AAC1G,KAFD;AAGA;AACAH,QAAIO,IAAJ,GAAW,CAACC,OAAD,EAAUH,OAAO,GAAjB,KAAyB;AAAC,eAAOL,IAAIM,MAAJ,CAAWD,IAAX,EAAiBT,IAAjB,CAAsBY,OAAtB,CAAP;AAAwC,KAA7E;AACA;AACAP;AACH,CAXD;;AAaAX,IAAII,GAAJ,CAAS,GAAEH,QAAS,QAApB,EAA6BkB,eAA7B;;kBAEenB,G","file":"app.js","sourcesContent":["import express from 'express';\nimport logger from 'morgan';\nimport body from 'body-parser';\nimport 'dotenv/config';\nimport {fliterQuery} from './common/query';\nimport {sequelize} from './common/sequelize-connection';\nimport admin from './api/private/admin';\n\nconst app = express();\nconst {ENDPOINT} = process.env;\napp.use(logger('dev'));\napp.use(body.json());\napp.use(body.urlencoded({ extended: false}));\n\napp.use((req, res, next) => {\n    //bind query\n    fliterQuery(req);\n    //for response success\n    res.success = (data, options, code = 200) => {\n        return typeof data === 'object' ? res.status(code).json({data, options}) : res.status(code).json(data);;\n    };\n    //for response error\n    res.fail = (message, code = 500) => {return res.status(code).json(message); };\n    //parse to next\n    next();\n});\n\napp.use(`${ENDPOINT}/admin`, admin);\n\nexport default app;\n"]}